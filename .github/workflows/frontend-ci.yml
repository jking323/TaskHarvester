name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'desktop/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'desktop/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: desktop/package-lock.json

    - name: Install dependencies
      run: |
        cd desktop
        npm ci

    - name: Run linting
      run: |
        cd desktop
        npm run lint

    - name: Run type checking
      run: |
        cd desktop
        npm run type-check

    - name: Run tests
      run: |
        cd desktop
        npm test

    - name: Run tests with coverage
      run: |
        cd desktop
        npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./desktop/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: true

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: desktop/package-lock.json

    - name: Install dependencies
      run: |
        cd desktop
        npm ci

    - name: Build application
      run: |
        cd desktop
        npm run build

    - name: Package application (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd desktop
        npm run package:linux

    - name: Package application (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd desktop
        npm run package:windows

    - name: Package application (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        cd desktop
        npm run package:mac

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: desktop-build-${{ matrix.os }}
        path: desktop/dist/

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: desktop/package-lock.json

    - name: Install dependencies
      run: |
        cd desktop
        npm ci

    - name: Run security audit
      run: |
        cd desktop
        npm audit --audit-level=moderate

    - name: Run dependency vulnerability scan
      run: |
        cd desktop
        npx audit-ci --moderate